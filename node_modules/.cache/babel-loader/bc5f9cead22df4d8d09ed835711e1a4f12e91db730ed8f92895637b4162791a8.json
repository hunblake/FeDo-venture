{"ast":null,"code":"import { extend } from '../../shared/utils.js';\nvar isGridEnabled = function isGridEnabled(swiper, params) {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  var swiper = this;\n  var activeIndex = swiper.activeIndex,\n    initialized = swiper.initialized,\n    _swiper$loopedSlides = swiper.loopedSlides,\n    loopedSlides = _swiper$loopedSlides === void 0 ? 0 : _swiper$loopedSlides,\n    params = swiper.params,\n    $el = swiper.$el;\n  var breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  var wasMultiRow = isGridEnabled(swiper, params);\n  var isMultiRow = isGridEnabled(swiper, breakpointParams);\n  var wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    $el.removeClass(\"\".concat(params.containerModifierClass, \"grid \").concat(params.containerModifierClass, \"grid-column\"));\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    $el.addClass(\"\".concat(params.containerModifierClass, \"grid\"));\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      $el.addClass(\"\".concat(params.containerModifierClass, \"grid-column\"));\n    }\n    swiper.emitContainerClasses();\n  }\n  var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  var isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate();\n    swiper.updateSlides();\n    swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","map":{"version":3,"names":["extend","isGridEnabled","swiper","params","grid","rows","setBreakpoint","activeIndex","initialized","_swiper$loopedSlides","loopedSlides","$el","breakpoints","Object","keys","length","breakpoint","getBreakpoint","breakpointsBase","el","currentBreakpoint","breakpointOnlyParams","undefined","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","enabled","removeClass","concat","containerModifierClass","emitContainerClasses","addClass","fill","directionChanged","direction","needsReLoop","loop","slidesPerView","changeDirection","isEnabled","assign","allowTouchMove","allowSlideNext","allowSlidePrev","disable","enable","emit","loopDestroy","loopCreate","updateSlides","slideTo"],"sources":["/Users/dornerbalazs/Desktop/dev/VC_webterv/Fedo/Fedo/node_modules/swiper/core/breakpoints/setBreakpoint.js"],"sourcesContent":["import { extend } from '../../shared/utils.js';\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\n\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    activeIndex,\n    initialized,\n    loopedSlides = 0,\n    params,\n    $el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n\n  if (wasMultiRow && !isMultiRow) {\n    $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    $el.addClass(`${params.containerModifierClass}grid`);\n\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      $el.addClass(`${params.containerModifierClass}grid-column`);\n    }\n\n    swiper.emitContainerClasses();\n  }\n\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate();\n    swiper.updateSlides();\n    swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n  }\n\n  swiper.emit('breakpoint', breakpointParams);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}